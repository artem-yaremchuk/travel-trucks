{"version":3,"file":"static/js/621.eb65bbc5.chunk.js","mappings":"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","sources":["../node_modules/@floating-ui/core/dist/floating-ui.core.mjs","../node_modules/@floating-ui/dom/dist/floating-ui.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.dom.mjs","../node_modules/@floating-ui/utils/dist/floating-ui.utils.mjs"],"sourcesContent":["import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const initialSideAxis = getSideAxis(initialPlacement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const hasFallbackAxisSideDirection = fallbackAxisSideDirection !== 'none';\n      if (!specifiedFallbackPlacements && hasFallbackAxisSideDirection) {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$filter2;\n                const placement = (_overflowsData$filter2 = overflowsData.filter(d => {\n                  if (hasFallbackAxisSideDirection) {\n                    const currentSideAxis = getSideAxis(d.placement);\n                    return currentSideAxis === initialSideAxis ||\n                    // Create a bias to the `y` side axis due to horizontal\n                    // reading directions favoring greater width.\n                    currentSideAxis === 'y';\n                  }\n                  return true;\n                }).map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$filter2[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: rawValue.mainAxis || 0,\n    crossAxis: rawValue.crossAxis || 0,\n    alignmentAxis: rawValue.alignmentAxis\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y,\n          enabled: {\n            [mainAxis]: checkMainAxis,\n            [crossAxis]: checkCrossAxis\n          }\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      var _state$middlewareData, _state$middlewareData2;\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if ((_state$middlewareData = state.middlewareData.shift) != null && _state$middlewareData.enabled.x) {\n        availableWidth = maximumClippingWidth;\n      }\n      if ((_state$middlewareData2 = state.middlewareData.shift) != null && _state$middlewareData2.enabled.y) {\n        availableHeight = maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getFrameElement, getNodeScroll, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = getFrameElement(currentWin);\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = getFrameElement(currentWin);\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\n// If <html> has a CSS width greater than the viewport, then this will be\n// incorrect for RTL.\nfunction getWindowScrollBarX(element, rect) {\n  const leftScroll = getNodeScroll(element).scrollLeft;\n  if (!rect) {\n    return getBoundingClientRect(getDocumentElement(element)).left + leftScroll;\n  }\n  return rect.left + leftScroll;\n}\n\nfunction getHTMLOffset(documentElement, scroll, ignoreScrollbarX) {\n  if (ignoreScrollbarX === void 0) {\n    ignoreScrollbarX = false;\n  }\n  const htmlRect = documentElement.getBoundingClientRect();\n  const x = htmlRect.left + scroll.scrollLeft - (ignoreScrollbarX ? 0 :\n  // RTL <body> scrollbar.\n  getWindowScrollBarX(documentElement, htmlRect));\n  const y = htmlRect.top + scroll.scrollTop;\n  return {\n    x,\n    y\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll, true) : createCoords(0);\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x + htmlOffset.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y + htmlOffset.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y,\n      width: clippingAncestor.width,\n      height: clippingAncestor.height\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      // If the <body> scrollbar appears on the left (e.g. RTL systems). Use\n      // Firefox with layout.scrollbar.side = 3 in about:config to test this.\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const htmlOffset = documentElement && !isOffsetParentAnElement && !isFixed ? getHTMLOffset(documentElement, scroll) : createCoords(0);\n  const x = rect.left + scroll.scrollLeft - offsets.x - htmlOffset.x;\n  const y = rect.top + scroll.scrollTop - offsets.y - htmlOffset.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  let rawOffsetParent = element.offsetParent;\n\n  // Firefox returns the <html> element as the offsetParent if it's non-static,\n  // while Chrome and Safari return the <body> element. The <body> element must\n  // be used to perform the correct calculations even if the <html> element is\n  // non-static.\n  if (getDocumentElement(element) === rawOffsetParent) {\n    rawOffsetParent = rawOffsetParent.ownerDocument.body;\n  }\n  return rawOffsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","function hasWindow() {\n  return typeof window !== 'undefined';\n}\nfunction getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  if (!hasWindow()) {\n    return false;\n  }\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  if (!hasWindow() || typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    const frameElement = getFrameElement(win);\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], frameElement && traverseIframes ? getOverflowAncestors(frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\nfunction getFrameElement(win) {\n  return win.parent && Object.getPrototypeOf(win.parent) ? win.frameElement : null;\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getFrameElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n"],"names":["computeCoordsFromPlacement","_ref","placement","rtl","coords","reference","floating","sideAxis","getSideAxis","alignmentAxis","getAlignmentAxis","alignLength","getAxisLength","side","getSide","isVertical","commonX","x","width","commonY","y","height","commonAlign","getAlignment","computePosition","_ref2","_asyncToGenerator","_regeneratorRuntime","_callee","config","_config$placement","_config$strategy","strategy","_config$middleware","middleware","platform","validMiddleware","rects","_computeCoordsFromPla","statefulPlacement","middlewareData","resetCount","i","_validMiddleware$i","name","fn","_yield$fn","nextX","nextY","data","reset","_computeCoordsFromPla2","_context","prev","next","filter","Boolean","isRTL","sent","getElementRects","length","initialPlacement","elements","_objectSpread","_defineProperty","t0","abrupt","stop","_x","_x2","_x3","apply","arguments","detectOverflow","_x4","_x5","_detectOverflow","_callee10","state","options","_await$platform$isEle","_evaluate8","_evaluate8$boundary","boundary","_evaluate8$rootBounda","rootBoundary","_evaluate8$elementCon","elementContext","_evaluate8$altBoundar","altBoundary","_evaluate8$padding","padding","paddingObject","altContext","element","clippingClientRect","rect","offsetParent","offsetScale","elementClientRect","_context10","evaluate","getPaddingObject","rectToClientRect","t1","isElement","t2","t3","t4","t5","contextElement","getDocumentElement","t6","t7","t8","t9","t10","getClippingRect","call","t11","getOffsetParent","getScale","t13","t12","t14","convertOffsetParentRelativeRectToViewportRelativeRect","t15","t16","top","bottom","left","right","getPlacementList","alignment","autoAlignment","allowedPlacements","concat","_toConsumableArray","getOppositeAlignmentPlacement","getSideOffsets","overflow","isAnySideFullyClipped","sides","getBoundingRect","minX","min","map","minY","max","getRectsByLine","sortedRects","slice","sort","a","b","groups","prevRect","push","convertValueToCoords","_x6","_x7","_convertValueToCoords","_callee11","mainAxisMulti","crossAxisMulti","rawValue","_ref6","mainAxis","crossAxis","_context11","includes","getCssDimensions","css","getComputedStyle","parseFloat","hasOffset","isHTMLElement","offsetWidth","offsetHeight","shouldFallback","round","$","unwrapElement","domElement","createCoords","getBoundingClientRect","_getCssDimensions","Number","isFinite","noOffsets","getVisualOffsets","win","getWindow","isWebKit","visualViewport","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","getFrameElement","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","leftScroll","getNodeScroll","scrollLeft","getHTMLOffset","documentElement","scroll","ignoreScrollbarX","htmlRect","scrollTop","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","body","ownerDocument","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","parentNode","getParentNode","isLastTraversableNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","getNodeName","isOverflowElement","offsetRect","htmlOffset","isStaticPositioned","getTrueOffsetParent","polyfill","rawOffsetParent","isTopLayer","svgOffsetParent","isTableElement","isContainingBlock","getContainingBlock","getOffsetParentFn","getDimensionsFn","floatingDimensions","this","getDimensions","topLayer","elementClippingAncestors","cache","cachedResult","get","result","getOverflowAncestors","el","currentContainingBlockComputedStyle","elementIsFixed","currentNode","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","getClientRects","Array","from","_getCssDimensions2","autoUpdate","update","_options","_options$ancestorScro","ancestorScroll","_options$ancestorResi","ancestorResize","_options$elementResiz","elementResize","ResizeObserver","_options$layoutShift","layoutShift","IntersectionObserver","_options$animationFra","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","frameId","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","clearTimeout","disconnect","refresh","skip","threshold","_element$getBoundingC","rootMargin","floor","isFirstUpdate","handleObserve","e","observe","entries","ratio","intersectionRatio","setTimeout","observeMove","reobserveFrame","resizeObserver","firstEntry","_slicedToArray","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","detectOverflow$1","offset","_callee7","_middlewareData$offse","_middlewareData$arrow","diffCoords","_context7","arrow","alignmentOffset","autoPlacement","_callee3","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","_evaluate","_evaluate$crossAxis","_evaluate$allowedPlac","_evaluate$autoAlignme","detectOverflowOptions","placements$1","currentIndex","currentPlacement","alignmentSides","currentOverflows","allOverflows","nextPlacement","placementsSortedByMostSpace","placementsThatFitOnEachSide","resetPlacement","_context3","placements","_objectWithoutProperties","_excluded","undefined","index","getAlignmentSides","overflows","d","acc","v","every","shift","_callee8","_objectSpread4","_enabled","_evaluate5","_evaluate5$mainAxis","checkMainAxis","_evaluate5$crossAxis","checkCrossAxis","_evaluate5$limiter","limiter","mainAxisCoord","crossAxisCoord","maxSide","_min","_max","_maxSide","_min2","_max2","limitedCoords","_context8","_excluded4","getOppositeAxis","clamp","enabled","flip","_callee4","_middlewareData$flip","_evaluate2","_evaluate2$mainAxis","_evaluate2$crossAxis","specifiedFallbackPlacements","_evaluate2$fallbackSt","fallbackStrategy","_evaluate2$fallbackAx","fallbackAxisSideDirection","_evaluate2$flipAlignm","flipAlignment","initialSideAxis","isBasePlacement","fallbackPlacements","hasFallbackAxisSideDirection","overflowsData","_sides","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$filter2","_placement","_context4","_excluded2","getOppositePlacement","getExpandedPlacements","getOppositeAxisPlacements","currentSideAxis","size","_callee9","_state$middlewareData","_state$middlewareData2","_evaluate7","_evaluate7$apply","isYAxis","_rects$floating","heightSide","widthSide","maximumClippingHeight","maximumClippingWidth","overflowAvailableHeight","overflowAvailableWidth","noShift","availableHeight","availableWidth","xMin","xMax","yMin","yMax","nextDimensions","_context9","_excluded5","hide","_callee5","_evaluate3","_evaluate3$strategy","_overflow","_offsets","_context5","_excluded3","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","_callee2","_objectSpread3","_ref4","_ref3","_ref3$padding","axis","arrowDimensions","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","_context2","inline","_callee6","_evaluate4","_evaluate4$padding","nativeClientRects","clientRects","fallback","resetRects","_context6","find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","limitShift","_ref5","_evaluate6","_evaluate6$offset","_evaluate6$mainAxis","_evaluate6$crossAxis","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse2","isOriginSide","Map","mergedOptions","platformWithCache","computePosition$1","hasWindow","window","node","isNode","nodeName","toLowerCase","_node$ownerDocument","defaultView","document","value","Node","Element","HTMLElement","isShadowRoot","ShadowRoot","_getComputedStyle","overflowX","overflowY","display","test","some","selector","matches","elementOrCss","webkit","transform","perspective","containerType","backdropFilter","willChange","contain","CSS","supports","scrollX","scrollY","assignedSlot","host","getNearestOverflowAncestor","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","frameElement","parent","Object","getPrototypeOf","alignments","Math","oppositeSideMap","oppositeAlignmentMap","start","end","param","split","mainAlignmentSide","oppositePlacement","replace","isStart","lr","rl","getSideList","expandPaddingObject"],"sourceRoot":""}